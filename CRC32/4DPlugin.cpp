/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : CRC32
 #	author : miyako
 #	2014/11/23
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

#include "crc.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
// --- CRC32

		case 1 :
			CRC32_Get(pResult, pParams);
			break;

	}
}

// ------------------------------------- CRC32 ------------------------------------


void CRC32_Get(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_BLOB Param1;
	C_LONGINT returnValue;

	Param1.fromParamAtIndex(pParams, 1);

    returnValue.setIntValue(crc32buf((char *)Param1.getBytesPtr(), Param1.getBytesLength())); 
	returnValue.setReturn(pResult);
}

